mport numpy as np
import pandas as pd

# 1D Data Aggregation
print("1D Data Aggregation:")

# 1D data (a Pandas Series)
data_1d = pd.Series([10, 20, 30, 40, 50, 60, 70])

# Aggregation operations on 1D data
sum_1d = data_1d.sum()
mean_1d = data_1d.mean()
count_1d = data_1d.count()

print(f"Data:\n{data_1d}\n")
print(f"Sum: {sum_1d}")
print(f"Mean: {mean_1d}")
print(f"Count: {count_1d}")
print("\n" + "-"*50 + "\n")

# 2D Data Aggregation
print("2D Data Aggregation:")

# 2D data (a Pandas DataFrame)
data_2d = pd.DataFrame({
    'A': [10, 20, 30, 40, 50],
    'B': [15, 25, 35, 45, 55],
    'C': [20, 30, 40, 50, 60]
})

# Aggregation operations on 2D data
sum_2d = data_2d.sum()           # Sum by columns
mean_2d = data_2d.mean(axis=1)   # Mean by rows
count_2d = data_2d.count()       # Count by columns

print(f"Data:\n{data_2d}\n")
print(f"Sum by Columns:\n{sum_2d}\n")
print(f"Mean by Rows:\n{mean_2d}\n")
print(f"Count by Columns:\n{count_2d}\n")
print("\n" + "-"*50 + "\n")

# n-D Data Aggregation
print("n-D Data Aggregation:")

# n-D data (a 3D NumPy array)
data_nd = np.array([
    [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
    [[10, 11, 12], [13, 14, 15], [16, 17, 18]],
    [[19, 20, 21], [22, 23, 24], [25, 26, 27]]
])

# Aggregation operations on n-D data
sum_nd = data_nd.sum(axis=0)    # Sum across the first axis
mean_nd = data_nd.mean(axis=1)  # Mean across the second axis
max_nd = data_nd.max(axis=2)    # Max across the third axis

print(f"Data:\n{data_nd}\n")
print(f"Sum across first axis:\n{sum_nd}\n")
print(f"Mean across second axis:\n{mean_nd}\n")
print(f"Max across third axis:\n{max_nd}\n")
